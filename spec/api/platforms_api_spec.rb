=begin
#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for QwilAPI::PlatformsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PlatformsApi' do
  before do
    # run before each test
    @instance = QwilAPI::PlatformsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlatformsApi' do
    it 'should create an instact of PlatformsApi' do
      expect(@instance).to be_instance_of(QwilAPI::PlatformsApi)
    end
  end

  # unit tests for accept_income_request_get
  # View to offer a
  # View to offer a ./accept endpoint for accepting a IncomeRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'accept_income_request_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for accept_income_request_post
  # View to offer a
  # View to offer a ./accept endpoint for accepting a IncomeRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'accept_income_request_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for accept_platform_membership_request_get
  # View to offer a
  # View to offer a ./accept endpoint for accepting a PlatformMembershipRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'accept_platform_membership_request_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for accept_platform_membership_request_post
  # View to offer a
  # View to offer a ./accept endpoint for accepting a PlatformMembershipRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'accept_platform_membership_request_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deny_income_request_get
  # View to offer a
  # View to offer a ./deny endpoint for denying a IncomeRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'deny_income_request_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deny_income_request_post
  # View to offer a
  # View to offer a ./deny endpoint for denying a IncomeRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'deny_income_request_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deny_platform_membership_request_get
  # View to offer a
  # View to offer a ./accept endpoint for accepting a PlatformMembershipRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'deny_platform_membership_request_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deny_platform_membership_request_post
  # View to offer a
  # View to offer a ./accept endpoint for accepting a PlatformMembershipRequest.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'deny_platform_membership_request_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for income_platform_create
  # The list of Income items for a specific User
  # The list of Income items for a specific User.&lt;br/&gt;This can be filtered by date using the start_date and end_date query parameters.
  # @param platform_pk 
  # @param user 
  # @param amount 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id Optional unique ID to correlate this Income to a record in another system. If specified, this will prevent duplicate Incomes being created with the same external_id. This field is unique per Platform. If this field is omitted, no uniqueness check is performed.
  # @option opts [DateTime] :payment_time 
  # @option opts [String] :notes 
  # @return [IncomeSerializerFixedSource]
  describe 'income_platform_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for income_platform_list
  # The list of Income items for a specific User
  # The list of Income items for a specific User.&lt;br/&gt;This can be filtered by date using the start_date and end_date query parameters.
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<IncomeSerializerFixedSource>]
  describe 'income_platform_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_contractor_create
  # The set of users on a specific Platform
  # The set of users on a specific Platform.&lt;br/&gt;Any users created through this ViewSet will have a profile created with the Platform set to the resource specified in the URL, e.g. POST /platforms/3/contractors/ will create a user with User.Profile.platform &#x3D; &#39;/platforms/3/&#39;.
  # @param platform_pk 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name First name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :last_name Last name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :business_name Business name. Only use this field if this user is a business entity.
  # @option opts [String] :contractor_type 
  # @option opts [String] :personal_information 
  # @option opts [String] :default_account Default account to use for payment of unpaid income.
  # @return [ContractorSerializer]
  describe 'platform_contractor_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_contractor_list
  # The set of users on a specific Platform
  # The set of users on a specific Platform.&lt;br/&gt;Any users created through this ViewSet will have a profile created with the Platform set to the resource specified in the URL, e.g. POST /platforms/3/contractors/ will create a user with User.Profile.platform &#x3D; &#39;/platforms/3/&#39;.
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<ContractorSerializer>]
  describe 'platform_contractor_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_contractor_partial_update
  # The set of users on a specific Platform
  # The set of users on a specific Platform.&lt;br/&gt;Any users created through this ViewSet will have a profile created with the Platform set to the resource specified in the URL, e.g. POST /platforms/3/contractors/ will create a user with User.Profile.platform &#x3D; &#39;/platforms/3/&#39;.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email 
  # @option opts [String] :first_name First name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :last_name Last name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :business_name Business name. Only use this field if this user is a business entity.
  # @option opts [String] :contractor_type 
  # @option opts [String] :personal_information 
  # @option opts [String] :default_account Default account to use for payment of unpaid income.
  # @return [ContractorSerializer]
  describe 'platform_contractor_partial_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_contractor_retrieve
  # The set of users on a specific Platform
  # The set of users on a specific Platform.&lt;br/&gt;Any users created through this ViewSet will have a profile created with the Platform set to the resource specified in the URL, e.g. POST /platforms/3/contractors/ will create a user with User.Profile.platform &#x3D; &#39;/platforms/3/&#39;.
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [ContractorSerializer]
  describe 'platform_contractor_retrieve test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_contractor_update
  # The set of users on a specific Platform
  # The set of users on a specific Platform.&lt;br/&gt;Any users created through this ViewSet will have a profile created with the Platform set to the resource specified in the URL, e.g. POST /platforms/3/contractors/ will create a user with User.Profile.platform &#x3D; &#39;/platforms/3/&#39;.
  # @param platform_pk 
  # @param pk 
  # @param email 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :first_name First name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :last_name Last name, if the user is an individual. Leave blank if this user is a company.
  # @option opts [String] :business_name Business name. Only use this field if this user is a business entity.
  # @option opts [String] :contractor_type 
  # @option opts [String] :personal_information 
  # @option opts [String] :default_account Default account to use for payment of unpaid income.
  # @return [ContractorSerializer]
  describe 'platform_contractor_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_csv_upload_income_file_post
  # Viewset for uploading CSV files containing Income config
  # Viewset for uploading CSV files containing Income config.&lt;br/&gt;The POST must use Content-Type: multipart/form-data&lt;br/&gt;The field name for the form-data must be \&quot;income-data\&quot;.&lt;br/&gt;The first line specifies the field names, and each subsequent line will specify an Income object.
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'platform_csv_upload_income_file_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_csv_upload_user_file_post
  # Viewset for uploading CSV files containing User config
  # Viewset for uploading CSV files containing User config.&lt;br/&gt;The POST must use Content-Type: multipart/form-data&lt;br/&gt;The field name for the form-data must be \&quot;user-data\&quot;.&lt;br/&gt;The first line specifies the field names, and each subsequent line will specify a User object.&lt;br/&gt;Note that the fields in User.PersonalInformation can also be specified,&lt;br/&gt;e.g. first_name,last_name,email,tax_id_number
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'platform_csv_upload_user_file_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_income_request_list
  # 
  # 
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<PlatformIncomeRequestSerializer>]
  describe 'platform_income_request_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_income_request_retrieve
  # 
  # 
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [PlatformIncomeRequestSerializer]
  describe 'platform_income_request_retrieve test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_invoice_create_create
  # 
  # 
  # @param platform_pk 
  # @param income 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id Optional unique ID to correlate this Invoice to a record in another system. If specified, this will prevent duplicate Invoices being created with the same external_id. This field is unique per Platform. If this field is omitted, no uniqueness check is performed.
  # @return [InvoiceSerializerFixedSourceCreate]
  describe 'platform_invoice_create_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_invoice_list
  # 
  # 
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<InvoiceSerializer>]
  describe 'platform_invoice_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_membership_create
  # 
  # 
  # @param platform_pk 
  # @param user 
  # @param [Hash] opts the optional parameters
  # @return [MembershipSerializer]
  describe 'platform_membership_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_membership_list
  # Temporary special-case logic to map old Platform memberships onto the new API
  # Temporary special-case logic to map old Platform memberships onto the new API.&lt;br/&gt;Generate a faux Membership for each User.profile.platform FKey ref.
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<MembershipSerializer>]
  describe 'platform_membership_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_membership_request_list
  # 
  # 
  # @param platform_pk 
  # @param [Hash] opts the optional parameters
  # @return [Array<PlatformMembershipRequestSerializer>]
  describe 'platform_membership_request_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_membership_request_retrieve
  # 
  # 
  # @param platform_pk 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [PlatformMembershipRequestSerializer]
  describe 'platform_membership_request_retrieve test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for platform_retrieve
  # 
  # 
  # @param pk 
  # @param [Hash] opts the optional parameters
  # @return [PlatformSerializer]
  describe 'platform_retrieve test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
